---
layout:     post
title:      "从MD5看到RFC文档"
subtitle:   "代码笔记第三话"
date:       2017-12-14
author:     "XiaoYu"
header-img: "img/post-md5.jpg"
tags:
    - 随笔
    - 经验
    - Code
---

> 最近忙着自己的毕业设计，好久没写了。

## 开题

选题是十一月二十号左右开始的，当时刚好在家里，委托学校同学帮我选的。这事想想还很气，之前联系一个教过我的老师，发邮件和短信都不回，真是纳闷他这点时间都没有吗？最后找到教自己 __近世代数__ 的老师,选了她的题目—— __对于MD5的彩虹表攻击方法的设计和实现__ 。

在C语言实现`MD5`时遇到了一些问题，不过都解决了。真的是都解决了！

---

## 什么是MD5

MD5是一种消息摘要算法，它将任意长度的输入转变为128比特的摘要输出。其中用到的函数是不可逆的，也就是说无法找到具有相同摘要的两个不同消息——2^64次操作，或找到给定摘要的对应消息——2^128次操作。不过早在2004年王小云教授已经找出了碰撞，而彩虹表算法实际上是一种穷搜索，不过采取了策略实现了时间——空间的折中，时间——空间折中方案的出现远早于MD5。

## 实现过程

一开始我在[Github](http://github.com)上找了两个别人写的，一个是C语言的，一个是C++写的，我只编译了第一个，并且将它改为可以计算图片的MD5值，之后在翻译RFC1321文档时看到它的附录给了C语言的实现，于是拷到了Xcode里，果然一进去就有一大堆各种错误，仔细想想这个草案交稿于1992年，程序还是1991年写的，ANSI C标准都还没出现，只好慢慢把错误修正过来。

### 修改记录

1. 删除 `global.h` 头文件，这里的定义现在来看是完全不需要的，特别是里面提到的 `PROTO_LIST` 还是没弄清楚用处，直接删去了。

```
/* POINTER defines a generic pointer type */
typedef unsigned char *POINTER;

/* UINT2 defines a two byte word */
typedef unsigned short int UINT2;

/* UINT4 defines a four byte word */
typedef unsigned long int UINT4;
```
上述定义已经不适用了。

2. 使用 `stdint.h` 头文件可以用 `uint8_t`和`uint32_t` 代替上述定义。
3. 废弃不用的形式：
```
int main (argc, argv)
int argc;
char * argv[];
```
第一次见到这种函数定义方式，觉得还是不直观。

4. 将一些不太好的书写形式改为标准的。例如`for`循环不加花括号。

我将修改后的程序上传到我的[Git仓库](https://github.com/OnlyThen/MD5_RFC1321)中，希望有人可以完成其他部分。

## 学习要从根本开始

MD5的实现就到此为止了，毕业设计的下一步就是彩虹表的实现了。我想先说说RFC文档，以前就有人说研究网络协议一定要看这个，可我直到现在才接触到，发现果然应该看。RFC文档其实收集了有关互联网相关信息，以及UNIX和互联网社区的软件文件。所以当我们接触到 `TCP` `UDP`等协议时，应该查询它们的RFC文档。

同样，当我们接触到一个新的东西时，不应该急着去应用它，而要想想它的来源是什么，如果要去使用它，我们应该从根本上掌握它，这样遇到问题时才不会一无所知。就像现在火热的人工智能，我只接触到了它的一小块的一小块——人脸识别，当我想要弄清楚它是怎么工作的时，我发现要使用的工具太多了，要学的太多了，事实真是这样的吗？现在各大公司都发行了自己的人工智能开发平台，例如Google的[tensorflow](http://www.tensorflow.org), [百度大脑](https://ai.baidu.com/?track=cp:nsem|pf:pc|pp:danao|pu:brand|ci:|kw:120337),但他们的研究领域还是那几块：自然语言处理、图像识别、语音识别，虽然现在有一些数据智能、增强现实等，但都是各种工作的结合，究其根本，还是要从上个世纪的几篇论文看起，那对于学习者来说，重要的还是把握核心知识，这样即使外在条件的改变也不会大大增加上手的难度。

深度优先是不会影响广度的。

就像我最近弄的MD5，如果用`Python` 写的话只要4行就搞定了，无非是添加一行 `import hashlib`，但是这就像是使用一个黑盒子一样，你不知道内部发生了什么，对于学习者来说这当然是不好的，当然在工作中肯定会使用最有效的工具。在IT中，我觉得根本就是数学和物理电路，要想在这一行业做得好，就得把握住这两方面。即使以后有大的技术升级，也不会落在后面。

## 作为一种艺术的计算机程序设计

高德纳如是说道，这也是我的追求方向，其我的内心还是有着文艺范的，从人文和科学都能到达那个终极目的地吧。但这都需要孜孜不倦的研究，甚至是毕生精力。

另外，`Tex` 居然是他发明的，真的是十分佩服他，有机会一定要把他的几卷书读一遍。



